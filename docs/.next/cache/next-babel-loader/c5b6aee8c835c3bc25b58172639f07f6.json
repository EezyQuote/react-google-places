{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paul\\\\Documents\\\\Projects\\\\eezyquote\\\\react-google-places-autocomplete\\\\docs\\\\pages\\\\props.md\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport withLayout from 'nextra-theme-docs';\nimport { withSSG } from 'nextra/ssg';\nimport layoutConfig from 'C:/Users/paul/Documents/Projects/eezyquote/react-google-places-autocomplete/docs/theme.config.js';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }\n  }));\n};\n\nconst MDXLayout = function NextraPage(props) {\n  return withSSG(withLayout({\n    filename: \"C:/Users/paul/Documents/Projects/eezyquote/react-google-places-autocomplete/docs/pages/props.md\",\n    route: \"/props\",\n    meta: {\n      \"id\": \"props\",\n      \"title\": \"Props\",\n      \"sidebar_label\": \"Props\"\n    },\n    pageMap: [{\n      \"name\": \"examples\",\n      \"route\": \"\\\\examples\",\n      \"frontMatter\": {\n        \"id\": \"examples\",\n        \"title\": \"Examples\",\n        \"sidebar_label\": \"Examples\"\n      }\n    }, {\n      \"name\": \"index\",\n      \"route\": \"\\\\\",\n      \"frontMatter\": {\n        \"id\": \"basic-usage\",\n        \"title\": \"Basics\",\n        \"sidebar_label\": \"Basics\"\n      }\n    }, {\n      \"name\": \"meta.json\",\n      \"meta\": {\n        \"index\": \"Getting Started\",\n        \"props\": \"Props\",\n        \"examples\": \"Examples\",\n        \"utility-functions\": \"Utility functions\"\n      }\n    }, {\n      \"name\": \"props\",\n      \"route\": \"\\\\props\",\n      \"frontMatter\": {\n        \"id\": \"props\",\n        \"title\": \"Props\",\n        \"sidebar_label\": \"Props\"\n      }\n    }, {\n      \"name\": \"utility-functions\",\n      \"children\": [{\n        \"name\": \"geocode-by-address\",\n        \"route\": \"\\\\utility-functions\\\\geocode-by-address\",\n        \"frontMatter\": {\n          \"id\": \"geocode-by-address\",\n          \"title\": \"Geocode by Address\",\n          \"sidebar_label\": \"Geocode by Address\"\n        }\n      }, {\n        \"name\": \"geocode-by-place-id\",\n        \"route\": \"\\\\utility-functions\\\\geocode-by-place-id\",\n        \"frontMatter\": {\n          \"id\": \"geocode-by-place-id\",\n          \"title\": \"Geocode by Place ID\",\n          \"sidebar_label\": \"Geocode by Place ID\"\n        }\n      }, {\n        \"name\": \"get-latitude-and-longitude\",\n        \"route\": \"\\\\utility-functions\\\\get-latitude-and-longitude\",\n        \"frontMatter\": {\n          \"id\": \"get-lat-lng\",\n          \"title\": \"Get Latitude and Longitude\",\n          \"sidebar_label\": \"Get Latitude and Longitude\"\n        }\n      }, {\n        \"name\": \"meta.json\",\n        \"meta\": {\n          \"geocode-by-address\": \"Geocode by Address\",\n          \"geocode-by-place-id\": \"Geocode by Place ID\",\n          \"get-latitude-and-longitude\": \"Get Latitude and Longitude\"\n        }\n      }],\n      \"route\": \"\\\\utility-functions\"\n    }]\n  }, layoutConfig))(props);\n};\n\nexport default function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, props, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }\n  }), mdx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, `Props`), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _extends({\n    \"className\": \"language-ts\",\n    \"parentName\": \"pre\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  }), `interface GooglePlacesAutocompleteProps {\n  apiKey?: string;                               // default: ''\n  autocompletionRequest?: AutocompletionRequest; // default: { }\n  debounce?: number;                             // default: 300\n  minLengthAutocomplete?: number;                // default: 0\n  onLoadFailed?: (error: Error) => void;         // default: console.error\n  selectProps?: SelectProps;                     // default: { }\n  withSessionToken?: boolean;                    // default: false\n}\n`)), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, `Where `, mdx(\"inlineCode\", _extends({\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), `SelectProps`), ` are the ones accepted by `, mdx(\"a\", _extends({\n    \"href\": \"https://react-select.com/props\",\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), `react-select`), `.`), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", _extends({\n    \"parentName\": \"h2\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), `apiKey`)), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, `If this parameter is passed, the component will inject the `, mdx(\"a\", _extends({\n    \"href\": \"https://developers.google.com/maps/documentation/javascript/\",\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), `Google Maps JavaScript API`), ` usign this `, mdx(\"inlineCode\", _extends({\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), `apiKey`), `. So there's no need to manually add the `, mdx(\"inlineCode\", _extends({\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), `script`), ` tag to yout HTML document.`), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", _extends({\n    \"parentName\": \"h2\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), `autocompletionRequest`)), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, `Autocompletion request object to add restrictions to the search. Let's see the shape this prop can take:`), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _extends({\n    \"className\": \"language-ts\",\n    \"parentName\": \"pre\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 10\n    }\n  }), `interface LatLng {\n  lat: number;\n  lng: number;\n}\n\ninterface AutocompletionRequest {\n  bounds?: [LatLng, LatLng];\n  componentRestrictions?: { country: string | string[] };\n  location?: LatLng;\n  offset?: number;\n  radius?: number;\n  types?: string[];\n}\n`)), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, `Here's an example on how to use it:`), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _extends({\n    \"className\": \"language-tsx\",\n    \"parentName\": \"pre\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 10\n    }\n  }), `<GooglePlacesAutocomplete\n  autocompletionRequest={{\n    bounds: [\n      { lat: 50, lng: 50 },\n      { lat: 100, lng: 100 }\n    ],\n    componentRestrictions: {\n    country: ['us', 'ca', 'uy'],\n    }\n  }}\n/>\n`)), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, mdx(\"strong\", _extends({\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 8\n    }\n  }), `Note:`), ` for more information check `, mdx(\"a\", _extends({\n    \"href\": \"https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service#AutocompletionRequest\",\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }), `google documentation`), `.`), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", _extends({\n    \"parentName\": \"h2\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), `debounce`)), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, `The number of milliseconds to delay before making a call to Google Maps API.`), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", _extends({\n    \"parentName\": \"h2\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }), `minLengthAutocomplete`)), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, `Defines a minimum number of characters needed on the input in order to make requests to the Google's API.`), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", _extends({\n    \"parentName\": \"h2\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), `onLoadFailed`)), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, `Function to be called when the injection of the `, mdx(\"a\", _extends({\n    \"href\": \"https://developers.google.com/maps/documentation/javascript/\",\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), `Google Maps JavaScript API`), ` fails due to network error.`), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, `For example:`), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _extends({\n    \"className\": \"language-jsx\",\n    \"parentName\": \"pre\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 10\n    }\n  }), `<GooglePlacesAutocomplete\n  onLoadFailed={(error) => (\n    console.error(\"Could not inject Google script\", error)\n  )}\n/>\n`)), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", _extends({\n    \"parentName\": \"h2\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }), `selectProps`)), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, `As this component uses `, mdx(\"a\", _extends({\n    \"href\": \"https://react-select.com\",\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }), `react-select`), ` under the hood, this prop accepts everything that's accepted by it. You can check `, mdx(\"a\", _extends({\n    \"href\": \"https://react-select.com/props\",\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }), `react-select props here`), `.`), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, `For example, a really common use would be to use it as a controlled input:`), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _extends({\n    \"className\": \"language-jsx\",\n    \"parentName\": \"pre\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 10\n    }\n  }), `const [value, setValue] = useState(null);\n\n<GooglePlacesAutocomplete\n  selectProps={{\n    value,\n    onChange: setValue,\n  }}\n/>\n`)), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", _extends({\n    \"parentName\": \"h2\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }), `withSessionToken`)), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }\n  }, `If this prop is set to `, mdx(\"inlineCode\", _extends({\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }), `true`), `, the component will handle changing the `, mdx(\"inlineCode\", _extends({\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }), `sessionToken`), ` on every session. To learn more about how this works refer to `, mdx(\"a\", _extends({\n    \"href\": \"https://developers.google.com/places/web-service/session-tokens\",\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }), `Google Places Session Token docs`), `.`));\n}\n;\nMDXContent.isMDXComponent = true;","map":{"version":3,"sources":["C:/Users/paul/Documents/Projects/eezyquote/react-google-places-autocomplete/docs/pages/props.md"],"names":["React","mdx","withLayout","withSSG","layoutConfig","makeShortcode","name","MDXDefaultShortcode","props","console","warn","MDXLayout","NextraPage","filename","route","meta","pageMap","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport withLayout from 'nextra-theme-docs'\nimport { withSSG } from 'nextra/ssg'\nimport layoutConfig from 'C:/Users/paul/Documents/Projects/eezyquote/react-google-places-autocomplete/docs/theme.config.js'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst MDXLayout = function NextraPage (props) {\n    return withSSG(withLayout({\n      filename: \"C:/Users/paul/Documents/Projects/eezyquote/react-google-places-autocomplete/docs/pages/props.md\",\n      route: \"/props\",\n      meta: {\"id\":\"props\",\"title\":\"Props\",\"sidebar_label\":\"Props\"},\n      pageMap: [{\"name\":\"examples\",\"route\":\"\\\\examples\",\"frontMatter\":{\"id\":\"examples\",\"title\":\"Examples\",\"sidebar_label\":\"Examples\"}},{\"name\":\"index\",\"route\":\"\\\\\",\"frontMatter\":{\"id\":\"basic-usage\",\"title\":\"Basics\",\"sidebar_label\":\"Basics\"}},{\"name\":\"meta.json\",\"meta\":{\"index\":\"Getting Started\",\"props\":\"Props\",\"examples\":\"Examples\",\"utility-functions\":\"Utility functions\"}},{\"name\":\"props\",\"route\":\"\\\\props\",\"frontMatter\":{\"id\":\"props\",\"title\":\"Props\",\"sidebar_label\":\"Props\"}},{\"name\":\"utility-functions\",\"children\":[{\"name\":\"geocode-by-address\",\"route\":\"\\\\utility-functions\\\\geocode-by-address\",\"frontMatter\":{\"id\":\"geocode-by-address\",\"title\":\"Geocode by Address\",\"sidebar_label\":\"Geocode by Address\"}},{\"name\":\"geocode-by-place-id\",\"route\":\"\\\\utility-functions\\\\geocode-by-place-id\",\"frontMatter\":{\"id\":\"geocode-by-place-id\",\"title\":\"Geocode by Place ID\",\"sidebar_label\":\"Geocode by Place ID\"}},{\"name\":\"get-latitude-and-longitude\",\"route\":\"\\\\utility-functions\\\\get-latitude-and-longitude\",\"frontMatter\":{\"id\":\"get-lat-lng\",\"title\":\"Get Latitude and Longitude\",\"sidebar_label\":\"Get Latitude and Longitude\"}},{\"name\":\"meta.json\",\"meta\":{\"geocode-by-address\":\"Geocode by Address\",\"geocode-by-place-id\":\"Geocode by Place ID\",\"get-latitude-and-longitude\":\"Get Latitude and Longitude\"}}],\"route\":\"\\\\utility-functions\"}]\n    }, layoutConfig))(props)\n}\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Props`}</h1>\n    <pre><code {...{\n        \"className\": \"language-ts\",\n        \"parentName\": \"pre\"\n      }}>{`interface GooglePlacesAutocompleteProps {\n  apiKey?: string;                               // default: ''\n  autocompletionRequest?: AutocompletionRequest; // default: { }\n  debounce?: number;                             // default: 300\n  minLengthAutocomplete?: number;                // default: 0\n  onLoadFailed?: (error: Error) => void;         // default: console.error\n  selectProps?: SelectProps;                     // default: { }\n  withSessionToken?: boolean;                    // default: false\n}\n`}</code></pre>\n    <p>{`Where `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`SelectProps`}</inlineCode>\n      {` are the ones accepted by `}\n      <a {...{\n        \"href\": \"https://react-select.com/props\",\n        \"parentName\": \"p\"\n      }}>{`react-select`}</a>\n      {`.`}</p>\n    <h2><inlineCode {...{\n        \"parentName\": \"h2\"\n      }}>{`apiKey`}</inlineCode></h2>\n    <p>{`If this parameter is passed, the component will inject the `}\n      <a {...{\n        \"href\": \"https://developers.google.com/maps/documentation/javascript/\",\n        \"parentName\": \"p\"\n      }}>{`Google Maps JavaScript API`}</a>\n      {` usign this `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`apiKey`}</inlineCode>\n      {`. So there's no need to manually add the `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`script`}</inlineCode>\n      {` tag to yout HTML document.`}</p>\n    <h2><inlineCode {...{\n        \"parentName\": \"h2\"\n      }}>{`autocompletionRequest`}</inlineCode></h2>\n    <p>{`Autocompletion request object to add restrictions to the search. Let's see the shape this prop can take:`}</p>\n    <pre><code {...{\n        \"className\": \"language-ts\",\n        \"parentName\": \"pre\"\n      }}>{`interface LatLng {\n  lat: number;\n  lng: number;\n}\n\ninterface AutocompletionRequest {\n  bounds?: [LatLng, LatLng];\n  componentRestrictions?: { country: string | string[] };\n  location?: LatLng;\n  offset?: number;\n  radius?: number;\n  types?: string[];\n}\n`}</code></pre>\n    <p>{`Here's an example on how to use it:`}</p>\n    <pre><code {...{\n        \"className\": \"language-tsx\",\n        \"parentName\": \"pre\"\n      }}>{`<GooglePlacesAutocomplete\n  autocompletionRequest={{\n    bounds: [\n      { lat: 50, lng: 50 },\n      { lat: 100, lng: 100 }\n    ],\n    componentRestrictions: {\n    country: ['us', 'ca', 'uy'],\n    }\n  }}\n/>\n`}</code></pre>\n    <p><strong {...{\n        \"parentName\": \"p\"\n      }}>{`Note:`}</strong>\n      {` for more information check `}\n      <a {...{\n        \"href\": \"https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service#AutocompletionRequest\",\n        \"parentName\": \"p\"\n      }}>{`google documentation`}</a>\n      {`.`}</p>\n    <h2><inlineCode {...{\n        \"parentName\": \"h2\"\n      }}>{`debounce`}</inlineCode></h2>\n    <p>{`The number of milliseconds to delay before making a call to Google Maps API.`}</p>\n    <h2><inlineCode {...{\n        \"parentName\": \"h2\"\n      }}>{`minLengthAutocomplete`}</inlineCode></h2>\n    <p>{`Defines a minimum number of characters needed on the input in order to make requests to the Google's API.`}</p>\n    <h2><inlineCode {...{\n        \"parentName\": \"h2\"\n      }}>{`onLoadFailed`}</inlineCode></h2>\n    <p>{`Function to be called when the injection of the `}\n      <a {...{\n        \"href\": \"https://developers.google.com/maps/documentation/javascript/\",\n        \"parentName\": \"p\"\n      }}>{`Google Maps JavaScript API`}</a>\n      {` fails due to network error.`}</p>\n    <p>{`For example:`}</p>\n    <pre><code {...{\n        \"className\": \"language-jsx\",\n        \"parentName\": \"pre\"\n      }}>{`<GooglePlacesAutocomplete\n  onLoadFailed={(error) => (\n    console.error(\"Could not inject Google script\", error)\n  )}\n/>\n`}</code></pre>\n    <h2><inlineCode {...{\n        \"parentName\": \"h2\"\n      }}>{`selectProps`}</inlineCode></h2>\n    <p>{`As this component uses `}\n      <a {...{\n        \"href\": \"https://react-select.com\",\n        \"parentName\": \"p\"\n      }}>{`react-select`}</a>\n      {` under the hood, this prop accepts everything that's accepted by it. You can check `}\n      <a {...{\n        \"href\": \"https://react-select.com/props\",\n        \"parentName\": \"p\"\n      }}>{`react-select props here`}</a>\n      {`.`}</p>\n    <p>{`For example, a really common use would be to use it as a controlled input:`}</p>\n    <pre><code {...{\n        \"className\": \"language-jsx\",\n        \"parentName\": \"pre\"\n      }}>{`const [value, setValue] = useState(null);\n\n<GooglePlacesAutocomplete\n  selectProps={{\n    value,\n    onChange: setValue,\n  }}\n/>\n`}</code></pre>\n    <h2><inlineCode {...{\n        \"parentName\": \"h2\"\n      }}>{`withSessionToken`}</inlineCode></h2>\n    <p>{`If this prop is set to `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`true`}</inlineCode>\n      {`, the component will handle changing the `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`sessionToken`}</inlineCode>\n      {` on every session. To learn more about how this works refer to `}\n      <a {...{\n        \"href\": \"https://developers.google.com/places/web-service/session-tokens\",\n        \"parentName\": \"p\"\n      }}>{`Google Places Session Token docs`}</a>\n      {`.`}</p>\n\n  </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}