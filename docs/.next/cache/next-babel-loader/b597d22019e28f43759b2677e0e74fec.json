{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/paul/Documents/Projects/eezyquote/react-google-places-autocomplete/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"C:/Users/paul/Documents/Projects/eezyquote/react-google-places-autocomplete/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\paul\\\\Documents\\\\Projects\\\\eezyquote\\\\react-google-places-autocomplete\\\\docs\\\\pages\\\\props.md\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport withLayout from 'nextra-theme-docs';\nimport { withSSG } from 'nextra/ssg';\nimport layoutConfig from 'C:/Users/paul/Documents/Projects/eezyquote/react-google-places-autocomplete/docs/theme.config.js';\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 10\n      }\n    }));\n  };\n};\n\nvar MDXLayout = function NextraPage(props) {\n  return withSSG(withLayout({\n    filename: \"C:/Users/paul/Documents/Projects/eezyquote/react-google-places-autocomplete/docs/pages/props.md\",\n    route: \"/props\",\n    meta: {\n      \"id\": \"props-2\",\n      \"title\": \"Props\",\n      \"sidebar_label\": \"Props asd\"\n    },\n    pageMap: [{\n      \"name\": \"index\",\n      \"route\": \"\\\\\",\n      \"frontMatter\": {\n        \"id\": \"basic-usage\",\n        \"title\": \"Basics\",\n        \"sidebar_label\": \"Basics\"\n      }\n    }, {\n      \"name\": \"meta.json\",\n      \"meta\": {\n        \"index\": \"Getting Started\",\n        \"props\": \"Props\"\n      }\n    }, {\n      \"name\": \"props\",\n      \"route\": \"\\\\props\",\n      \"frontMatter\": {\n        \"id\": \"props-2\",\n        \"title\": \"Props\",\n        \"sidebar_label\": \"Props asd\"\n      }\n    }]\n  }, layoutConfig))(props);\n};\n\n_c = MDXLayout;\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, props, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }\n  }), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _extends({\n    \"className\": \"language-tsx\",\n    \"parentName\": \"pre\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  }), \"interface GooglePlacesAutocompleteProps {\\n  apiKey?: string;                               // default: ''\\n  autocompletionRequest?: AutocompletionRequest; // default: { }\\n  debounce?: number;                             // default: 300\\n  minLengthAutocomplete?: number;                // default: 0\\n  onLoadFailed?: (error: Error) => void;         // default: console.error\\n  selectProps?: SelectProps;                     // default: { }\\n  withSessionToken?: boolean;                    // default: false\\n}\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, \"Where \", mdx(\"inlineCode\", _extends({\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), \"SelectProps\"), \" are the ones accepted by \", mdx(\"a\", _extends({\n    \"href\": \"https://react-select.com/props\",\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), \"react-select\"), \".\"), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", _extends({\n    \"parentName\": \"h2\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), \"apiKey\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, \"If this parameter is passed, the component will inject the \", mdx(\"a\", _extends({\n    \"href\": \"https://developers.google.com/maps/documentation/javascript/\",\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), \"Google Maps JavaScript API\"), \" usign this \", mdx(\"inlineCode\", _extends({\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), \"apiKey\"), \". So there's no need to manually add the \", mdx(\"inlineCode\", _extends({\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), \"script\"), \" tag to yout HTML document.\"), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", _extends({\n    \"parentName\": \"h2\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), \"autocompletionRequest\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, \"Autocompletion request object to add restrictions to the search. Let's see the shape this prop can take:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _extends({\n    \"className\": \"language-tsx\",\n    \"parentName\": \"pre\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 10\n    }\n  }), \"interface LatLng {\\n  lat: number;\\n  lng: number;\\n}\\n\\ninterface AutocompletionRequest {\\n  bounds?: [LatLng, LatLng];\\n  componentRestrictions?: { country: string | string[] };\\n  location?: LatLng;\\n  offset?: number;\\n  radius?: number;\\n  types?: string[];\\n}\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, \"Here's an example on how to use it:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _extends({\n    \"className\": \"language-jsx\",\n    \"parentName\": \"pre\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 10\n    }\n  }), \"<GooglePlacesAutocomplete\\n  autocompletionRequest={{\\n    bounds: [\\n      { lat: 50, lng: 50 },\\n      { lat: 100, lng: 100 }\\n    ],\\n    componentRestrictions: {\\n    country: ['us', 'ca', 'uy'],\\n    }\\n  }}\\n/>\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, mdx(\"strong\", _extends({\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 8\n    }\n  }), \"Note:\"), \" for more information check \", mdx(\"a\", _extends({\n    \"href\": \"https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service#AutocompletionRequest\",\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }), \"google documentation\"), \".\"), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", _extends({\n    \"parentName\": \"h2\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), \"debounce\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, \"The number of milliseconds to delay before making a call to Google Maps API.\"), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", _extends({\n    \"parentName\": \"h2\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), \"minLengthAutocomplete\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, \"Defines a minimum number of characters needed on the input in order to make requests to the Google's API.\"), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", _extends({\n    \"parentName\": \"h2\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }), \"onLoadFailed\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, \"Function to be called when the injection of the \", mdx(\"a\", _extends({\n    \"href\": \"https://developers.google.com/maps/documentation/javascript/\",\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }), \"Google Maps JavaScript API\"), \" fails due to network error.\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, \"For example:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _extends({\n    \"className\": \"language-jsx\",\n    \"parentName\": \"pre\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 10\n    }\n  }), \"<GooglePlacesAutocomplete\\n  onLoadFailed={(error) => (\\n    console.error(\\\"Could not inject Google script\\\", error)\\n  )}\\n/>\\n\")), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", _extends({\n    \"parentName\": \"h2\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }), \"selectProps\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, \"As this component uses \", mdx(\"a\", _extends({\n    \"href\": \"https://react-select.com\",\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }), \"react-select\"), \" under the hood, this prop accepts everything that's accepted by it. You can check \", mdx(\"a\", _extends({\n    \"href\": \"https://react-select.com/props\",\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }), \"react-select props here\"), \".\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, \"For example, a really common use would be to use it as a controlled input:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _extends({\n    \"className\": \"language-jsx\",\n    \"parentName\": \"pre\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 10\n    }\n  }), \"const [value, setValue] = useState(null);\\n\\n<GooglePlacesAutocomplete\\n  selectProps={{\\n    value,\\n    onChange: setValue,\\n  }}\\n/>\\n\")), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", _extends({\n    \"parentName\": \"h2\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }), \"withSessionToken\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, \"If this prop is set to \", mdx(\"inlineCode\", _extends({\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }), \"true\"), \", the component will handle changing the \", mdx(\"inlineCode\", _extends({\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }), \"sessionToken\"), \" on every session. To learn more about how this works refer to \", mdx(\"a\", _extends({\n    \"href\": \"https://developers.google.com/places/web-service/session-tokens\",\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }), \"Google Places Session Token docs\"), \".\"));\n}\n_c2 = MDXContent;\n;\nMDXContent.isMDXComponent = true;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MDXLayout\");\n$RefreshReg$(_c2, \"MDXContent\");","map":{"version":3,"sources":["C:/Users/paul/Documents/Projects/eezyquote/react-google-places-autocomplete/docs/pages/props.md"],"names":["React","mdx","withLayout","withSSG","layoutConfig","makeShortcode","name","MDXDefaultShortcode","props","console","warn","MDXLayout","NextraPage","filename","route","meta","pageMap","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport withLayout from 'nextra-theme-docs'\nimport { withSSG } from 'nextra/ssg'\nimport layoutConfig from 'C:/Users/paul/Documents/Projects/eezyquote/react-google-places-autocomplete/docs/theme.config.js'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst MDXLayout = function NextraPage (props) {\n    return withSSG(withLayout({\n      filename: \"C:/Users/paul/Documents/Projects/eezyquote/react-google-places-autocomplete/docs/pages/props.md\",\n      route: \"/props\",\n      meta: {\"id\":\"props-2\",\"title\":\"Props\",\"sidebar_label\":\"Props asd\"},\n      pageMap: [{\"name\":\"index\",\"route\":\"\\\\\",\"frontMatter\":{\"id\":\"basic-usage\",\"title\":\"Basics\",\"sidebar_label\":\"Basics\"}},{\"name\":\"meta.json\",\"meta\":{\"index\":\"Getting Started\",\"props\":\"Props\"}},{\"name\":\"props\",\"route\":\"\\\\props\",\"frontMatter\":{\"id\":\"props-2\",\"title\":\"Props\",\"sidebar_label\":\"Props asd\"}}]\n    }, layoutConfig))(props)\n}\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...props} components={components} mdxType=\"MDXLayout\">\n    <pre><code {...{\n        \"className\": \"language-tsx\",\n        \"parentName\": \"pre\"\n      }}>{`interface GooglePlacesAutocompleteProps {\n  apiKey?: string;                               // default: ''\n  autocompletionRequest?: AutocompletionRequest; // default: { }\n  debounce?: number;                             // default: 300\n  minLengthAutocomplete?: number;                // default: 0\n  onLoadFailed?: (error: Error) => void;         // default: console.error\n  selectProps?: SelectProps;                     // default: { }\n  withSessionToken?: boolean;                    // default: false\n}\n`}</code></pre>\n    <p>{`Where `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`SelectProps`}</inlineCode>\n      {` are the ones accepted by `}\n      <a {...{\n        \"href\": \"https://react-select.com/props\",\n        \"parentName\": \"p\"\n      }}>{`react-select`}</a>\n      {`.`}</p>\n    <h2><inlineCode {...{\n        \"parentName\": \"h2\"\n      }}>{`apiKey`}</inlineCode></h2>\n    <p>{`If this parameter is passed, the component will inject the `}\n      <a {...{\n        \"href\": \"https://developers.google.com/maps/documentation/javascript/\",\n        \"parentName\": \"p\"\n      }}>{`Google Maps JavaScript API`}</a>\n      {` usign this `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`apiKey`}</inlineCode>\n      {`. So there's no need to manually add the `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`script`}</inlineCode>\n      {` tag to yout HTML document.`}</p>\n    <h2><inlineCode {...{\n        \"parentName\": \"h2\"\n      }}>{`autocompletionRequest`}</inlineCode></h2>\n    <p>{`Autocompletion request object to add restrictions to the search. Let's see the shape this prop can take:`}</p>\n    <pre><code {...{\n        \"className\": \"language-tsx\",\n        \"parentName\": \"pre\"\n      }}>{`interface LatLng {\n  lat: number;\n  lng: number;\n}\n\ninterface AutocompletionRequest {\n  bounds?: [LatLng, LatLng];\n  componentRestrictions?: { country: string | string[] };\n  location?: LatLng;\n  offset?: number;\n  radius?: number;\n  types?: string[];\n}\n`}</code></pre>\n    <p>{`Here's an example on how to use it:`}</p>\n    <pre><code {...{\n        \"className\": \"language-jsx\",\n        \"parentName\": \"pre\"\n      }}>{`<GooglePlacesAutocomplete\n  autocompletionRequest={{\n    bounds: [\n      { lat: 50, lng: 50 },\n      { lat: 100, lng: 100 }\n    ],\n    componentRestrictions: {\n    country: ['us', 'ca', 'uy'],\n    }\n  }}\n/>\n`}</code></pre>\n    <p><strong {...{\n        \"parentName\": \"p\"\n      }}>{`Note:`}</strong>\n      {` for more information check `}\n      <a {...{\n        \"href\": \"https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service#AutocompletionRequest\",\n        \"parentName\": \"p\"\n      }}>{`google documentation`}</a>\n      {`.`}</p>\n    <h2><inlineCode {...{\n        \"parentName\": \"h2\"\n      }}>{`debounce`}</inlineCode></h2>\n    <p>{`The number of milliseconds to delay before making a call to Google Maps API.`}</p>\n    <h2><inlineCode {...{\n        \"parentName\": \"h2\"\n      }}>{`minLengthAutocomplete`}</inlineCode></h2>\n    <p>{`Defines a minimum number of characters needed on the input in order to make requests to the Google's API.`}</p>\n    <h2><inlineCode {...{\n        \"parentName\": \"h2\"\n      }}>{`onLoadFailed`}</inlineCode></h2>\n    <p>{`Function to be called when the injection of the `}\n      <a {...{\n        \"href\": \"https://developers.google.com/maps/documentation/javascript/\",\n        \"parentName\": \"p\"\n      }}>{`Google Maps JavaScript API`}</a>\n      {` fails due to network error.`}</p>\n    <p>{`For example:`}</p>\n    <pre><code {...{\n        \"className\": \"language-jsx\",\n        \"parentName\": \"pre\"\n      }}>{`<GooglePlacesAutocomplete\n  onLoadFailed={(error) => (\n    console.error(\"Could not inject Google script\", error)\n  )}\n/>\n`}</code></pre>\n    <h2><inlineCode {...{\n        \"parentName\": \"h2\"\n      }}>{`selectProps`}</inlineCode></h2>\n    <p>{`As this component uses `}\n      <a {...{\n        \"href\": \"https://react-select.com\",\n        \"parentName\": \"p\"\n      }}>{`react-select`}</a>\n      {` under the hood, this prop accepts everything that's accepted by it. You can check `}\n      <a {...{\n        \"href\": \"https://react-select.com/props\",\n        \"parentName\": \"p\"\n      }}>{`react-select props here`}</a>\n      {`.`}</p>\n    <p>{`For example, a really common use would be to use it as a controlled input:`}</p>\n    <pre><code {...{\n        \"className\": \"language-jsx\",\n        \"parentName\": \"pre\"\n      }}>{`const [value, setValue] = useState(null);\n\n<GooglePlacesAutocomplete\n  selectProps={{\n    value,\n    onChange: setValue,\n  }}\n/>\n`}</code></pre>\n    <h2><inlineCode {...{\n        \"parentName\": \"h2\"\n      }}>{`withSessionToken`}</inlineCode></h2>\n    <p>{`If this prop is set to `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`true`}</inlineCode>\n      {`, the component will handle changing the `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`sessionToken`}</inlineCode>\n      {` on every session. To learn more about how this works refer to `}\n      <a {...{\n        \"href\": \"https://developers.google.com/places/web-service/session-tokens\",\n        \"parentName\": \"p\"\n      }}>{`Google Places Session Token docs`}</a>\n      {`.`}</p>\n\n  </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}