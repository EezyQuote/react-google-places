{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paul\\\\Documents\\\\Projects\\\\eezyquote\\\\react-google-places-autocomplete\\\\docs\\\\pages\\\\index.md\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport withLayout from 'nextra-theme-docs';\nimport { withSSG } from 'nextra/ssg';\nimport layoutConfig from 'C:/Users/paul/Documents/Projects/eezyquote/react-google-places-autocomplete/docs/theme.config.js';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }\n  }));\n};\n\nconst MDXLayout = function NextraPage(props) {\n  return withSSG(withLayout({\n    filename: \"C:/Users/paul/Documents/Projects/eezyquote/react-google-places-autocomplete/docs/pages/index.md\",\n    route: \"/\",\n    meta: {\n      \"id\": \"basic-usage\",\n      \"title\": \"Basics\",\n      \"sidebar_label\": \"Basics\"\n    },\n    pageMap: [{\n      \"name\": \"index\",\n      \"route\": \"\\\\\",\n      \"frontMatter\": {\n        \"id\": \"basic-usage\",\n        \"title\": \"Basics\",\n        \"sidebar_label\": \"Basics\"\n      }\n    }, {\n      \"name\": \"meta.json\",\n      \"meta\": {\n        \"index\": \"Getting Started\",\n        \"props\": \"Props\"\n      }\n    }, {\n      \"name\": \"props\",\n      \"route\": \"\\\\props\",\n      \"frontMatter\": {\n        \"id\": \"props\",\n        \"title\": \"Props\",\n        \"sidebar_label\": \"Props\"\n      }\n    }]\n  }, layoutConfig))(props);\n};\n\nexport default function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, props, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }\n  }), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, `Install`), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _extends({\n    \"className\": \"language-bash\",\n    \"parentName\": \"pre\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  }), `npm install --save @eezyquote/react-google-places\n`)), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, `or`), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _extends({\n    \"className\": \"language-bash\",\n    \"parentName\": \"pre\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }\n  }), `yarn add @eezyquote/react-google-places\n`)), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, `Basic Usage`), mdx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, `Load Google Maps JavaScript API`), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, `First, generate an `, mdx(\"inlineCode\", _extends({\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), `apiKey`), ` in order to use it to load `, mdx(\"a\", _extends({\n    \"href\": \"https://developers.google.com/maps/documentation/javascript/\",\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), `Google Maps JavaScript API`), `. Then, use it to load it in your HTML file, adding a script tag:`), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _extends({\n    \"className\": \"language-html\",\n    \"parentName\": \"pre\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }\n  }), `<script src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_GOOGLE_API_KEY&libraries=places\" type=\"text/javascript\" />\n`)), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, mdx(\"strong\", _extends({\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 8\n    }\n  }), `Note:`), ` if you pass down the `, mdx(\"inlineCode\", _extends({\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), `apiKey`), ` prop to the component, you can skip loading the `, mdx(\"a\", _extends({\n    \"href\": \"https://developers.google.com/maps/documentation/javascript/\",\n    \"parentName\": \"p\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), `Google Maps JavaScript API`), `, as the component will inject that script on the page.`), mdx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, `Use the component`), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _extends({\n    \"className\": \"language-tsx\",\n    \"parentName\": \"pre\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 10\n    }\n  }), `import React from 'react';\nimport GooglePlacesAutocomplete from '@eezyquote/react-google-places';\n\nconst Component = () => <GooglePlacesAutocomplete />\n\nexport default Component;\n`)));\n}\n;\nMDXContent.isMDXComponent = true;","map":{"version":3,"sources":["C:/Users/paul/Documents/Projects/eezyquote/react-google-places-autocomplete/docs/pages/index.md"],"names":["React","mdx","withLayout","withSSG","layoutConfig","makeShortcode","name","MDXDefaultShortcode","props","console","warn","MDXLayout","NextraPage","filename","route","meta","pageMap","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport withLayout from 'nextra-theme-docs'\nimport { withSSG } from 'nextra/ssg'\nimport layoutConfig from 'C:/Users/paul/Documents/Projects/eezyquote/react-google-places-autocomplete/docs/theme.config.js'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst MDXLayout = function NextraPage (props) {\n    return withSSG(withLayout({\n      filename: \"C:/Users/paul/Documents/Projects/eezyquote/react-google-places-autocomplete/docs/pages/index.md\",\n      route: \"/\",\n      meta: {\"id\":\"basic-usage\",\"title\":\"Basics\",\"sidebar_label\":\"Basics\"},\n      pageMap: [{\"name\":\"index\",\"route\":\"\\\\\",\"frontMatter\":{\"id\":\"basic-usage\",\"title\":\"Basics\",\"sidebar_label\":\"Basics\"}},{\"name\":\"meta.json\",\"meta\":{\"index\":\"Getting Started\",\"props\":\"Props\"}},{\"name\":\"props\",\"route\":\"\\\\props\",\"frontMatter\":{\"id\":\"props\",\"title\":\"Props\",\"sidebar_label\":\"Props\"}}]\n    }, layoutConfig))(props)\n}\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`Install`}</h2>\n    <pre><code {...{\n        \"className\": \"language-bash\",\n        \"parentName\": \"pre\"\n      }}>{`npm install --save @eezyquote/react-google-places\n`}</code></pre>\n    <p>{`or`}</p>\n    <pre><code {...{\n        \"className\": \"language-bash\",\n        \"parentName\": \"pre\"\n      }}>{`yarn add @eezyquote/react-google-places\n`}</code></pre>\n    <h2>{`Basic Usage`}</h2>\n    <h3>{`Load Google Maps JavaScript API`}</h3>\n    <p>{`First, generate an `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`apiKey`}</inlineCode>\n      {` in order to use it to load `}\n      <a {...{\n        \"href\": \"https://developers.google.com/maps/documentation/javascript/\",\n        \"parentName\": \"p\"\n      }}>{`Google Maps JavaScript API`}</a>\n      {`. Then, use it to load it in your HTML file, adding a script tag:`}</p>\n    <pre><code {...{\n        \"className\": \"language-html\",\n        \"parentName\": \"pre\"\n      }}>{`<script src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_GOOGLE_API_KEY&libraries=places\" type=\"text/javascript\" />\n`}</code></pre>\n    <p><strong {...{\n        \"parentName\": \"p\"\n      }}>{`Note:`}</strong>\n      {` if you pass down the `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`apiKey`}</inlineCode>\n      {` prop to the component, you can skip loading the `}\n      <a {...{\n        \"href\": \"https://developers.google.com/maps/documentation/javascript/\",\n        \"parentName\": \"p\"\n      }}>{`Google Maps JavaScript API`}</a>\n      {`, as the component will inject that script on the page.`}</p>\n    <h3>{`Use the component`}</h3>\n    <pre><code {...{\n        \"className\": \"language-tsx\",\n        \"parentName\": \"pre\"\n      }}>{`import React from 'react';\nimport GooglePlacesAutocomplete from '@eezyquote/react-google-places';\n\nconst Component = () => <GooglePlacesAutocomplete />\n\nexport default Component;\n`}</code></pre>\n\n  </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}